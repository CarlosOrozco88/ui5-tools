{"version":3,"sources":["../webpack/bootstrap","../external \"vscode\"",".././src/Utils.js","../external \"path\"","../external \"fs\"",".././src/StatusBar.js",".././src/extension.js",".././src/Server.js","../external \"express\"","../external \"livereload\"","../external \"connect-livereload\"","../external \"opn\"","../external \"http-proxy-middleware\"","../external \"https\"","../external \"url-join\"",".././src/Configurator.js",".././src/Builder.js","../external \"rimraf\"","../external \"ui5-preload\"","../external \"uglify-js\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","workspace","path","fs","getConfiguration","tool","getConfigurationProperty","getConfigurationGeneral","getConfigurationServer","getConfigurationBuilder","getRoot","baseDir","rootPath","arr","split","pop","join","loadConfig","restarting","srcFolder","distFolder","ui5Version","serverName","port","openBrowser","watch","watchExtensions","gatewayProxy","gatewayUri","resourcesProxy","localDependencies","serveFolder","protocol","debugSources","uglifySources","open","files","serveStatic","routes","folders","foldersRoot","foldersRootMap","foldersWithName","servingFolder","workspaceFolders","Error","folder","folderUri","forEach","route","uri","sep","existsSync","push","dir","index","portLiveReload","get404","errorPage","window","StatusBarAlignment","Utils","serverNavBar","errors","lastText","startText","text","init","subscriptions","createStatusBarItem","Left","command","show","stopText","errorText","length","getErrors","startingText","stoppingText","pushError","error","this","commands","registerCommand","Server","Configurator","Builder","StatusBar","activate","context","start","stop","restart","toggle","build","odataProvider","ui5Provider","deactivate","liveReload","connectLiveReload","opn","createProxyMiddleware","httpsModule","urljoin","app","server","liveServer","async","config","express","use","static","createServer","extraExts","watchDirs","ignore","attachLiveReload","entries","folderRoot","proxy","targetUri","pathRewrite","target","secure","indexOf","changeOrigin","logLevel","getGatewayProxy","pathRoute","framework","statusCode","showErrorMessage","on","e","getResourcesProxy","req","res","status","send","getErrorsMiddleware","readFileSync","__dirname","cert","listen","url","Promise","resolv","close","undefined","listening","ConfigurationTarget","odataProviderValue","quickPickOdataProvider","showQuickPick","description","label","picked","placeHolder","canPickMany","update","Workspace","inputBoxOdataUri","showInputBox","ui5ProviderValue","quickPickUI5Provider","inputBoxGatewayUri","inputBoxUI5VersionUri","rimraf","preload","UglifyJS","projectPath","project","qpOptions","ui5ProjectToBuild","filter","askProjectToBuild","compatVersionArr","compatVersion","sync","copyRecursiveSync","src","dest","existsSrc","stats","statSync","isDirectory","mkdirSync","readdirSync","childItemName","extname","copyOriginal","code","minifiedFile","minify","writeFileSync","copyFileSync","replace","json","jsonStringified","JSON","stringify","parse","component","namespace","id","library","type","cwd","resources","prefix","compress","verbose","components","libraries"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = require(\"vscode\");","const { workspace } = require('vscode');\nconst path = require('path');\nconst fs = require('fs');\n\nfunction getConfiguration(tool = '') {\n  if (tool) {\n    tool = '.' + tool;\n  }\n  return workspace.getConfiguration('ui5-tools' + tool);\n}\n\nfunction getConfigurationProperty(property, tool = '') {\n  if (property) {\n    return getConfiguration(tool).get(property);\n  }\n  return getConfiguration(tool);\n}\n\nfunction getConfigurationGeneral(property) {\n  return getConfigurationProperty(property);\n}\n\nfunction getConfigurationServer(property) {\n  return getConfigurationProperty(property, 'server');\n}\nfunction getConfigurationBuilder(property) {\n  return getConfigurationProperty(property, 'builder');\n}\n\nfunction getRoot() {\n  let baseDir = workspace.rootPath;\n  if (baseDir) {\n    let arr = baseDir.split('/');\n    arr.pop();\n    baseDir = arr.join('/');\n  }\n  return baseDir;\n}\n\nfunction loadConfig(restarting = false) {\n  let srcFolder = getConfigurationGeneral('srcFolder');\n  let distFolder = getConfigurationGeneral('distFolder');\n  let ui5Version = getConfigurationGeneral('ui5Version');\n\n  let serverName = getConfigurationServer('name');\n  let port = getConfigurationServer('port');\n  let openBrowser = getConfigurationServer('openBrowser');\n  let watch = getConfigurationServer('watch');\n  let watchExtensions = getConfigurationServer('watchExtensions');\n  let gatewayProxy = getConfigurationServer('gatewayProxy');\n  let gatewayUri = getConfigurationServer('gatewayUri');\n  let resourcesProxy = getConfigurationServer('resourcesProxy');\n  let localDependencies = getConfigurationServer('localDependencies');\n  let serveFolder = getConfigurationServer('serveFolder');\n  let protocol = getConfigurationServer('protocol');\n  let index = 'index.html';\n\n  let debugSources = getConfigurationBuilder('debugSources');\n  let uglifySources = getConfigurationBuilder('uglifySources');\n  let portLiveReload = 35729;\n\n  let open = restarting ? false : openBrowser;\n\n  let baseDir = getRoot();\n\n  let files = [];\n  let serveStatic = [];\n  let routes = {};\n  let folders = [];\n  let foldersRoot = [];\n  let foldersRootMap = {};\n\n  let foldersWithName = [];\n\n  let servingFolder = serveFolder === 'Source Folder' ? srcFolder : distFolder;\n\n  if (workspace.workspaceFolders) {\n    // Is a workspace\n    let folder, folderUri;\n    workspace.workspaceFolders.forEach((route) => {\n      folder = '' + route.uri.path.split(path.sep).pop();\n      if (fs.existsSync(path.join(baseDir, folder, servingFolder))) {\n        foldersWithName.push(route);\n        folders.push(folder);\n\n        files.push(path.join(folder, servingFolder, `*.{${watchExtensions}}`));\n        files.push(path.join(folder, servingFolder, '**', `*.{${watchExtensions}}`));\n\n        folderUri = '/' + folder;\n        routes[folderUri] = path.join(folder, servingFolder);\n\n        foldersRoot.push(path.join(baseDir, folder, servingFolder));\n        foldersRootMap[folderUri] = path.join(baseDir, folder, servingFolder);\n\n        serveStatic.push({\n          route: folder,\n          dir: path.join(route.uri.path, servingFolder),\n        });\n      }\n    });\n  } else {\n    throw new Error('Create at least one project in your workspace');\n  }\n\n  return {\n    // General Config\n    srcFolder,\n    distFolder,\n    ui5Version,\n    // Server config\n    serverName,\n    port,\n    openBrowser,\n    watch,\n    watchExtensions,\n    gatewayProxy,\n    gatewayUri,\n    resourcesProxy,\n    localDependencies,\n    serveFolder,\n    index,\n    protocol,\n    // Builder config\n    debugSources,\n    uglifySources,\n    // Modified config\n    baseDir,\n    foldersRoot,\n    foldersRootMap,\n    folders,\n    foldersWithName,\n    files,\n    serveStatic,\n    routes,\n    open,\n    portLiveReload,\n  };\n}\n\nfunction get404() {\n  let errorPage = '<html><head><title>UI5 Server</title></head><body>';\n  errorPage += '<p>ERROR 404</p>';\n  errorPage += '</body></html>';\n\n  return errorPage;\n}\n\nmodule.exports = {\n  getConfigurationGeneral,\n  getConfigurationServer,\n  getConfigurationBuilder,\n  getRoot,\n  loadConfig,\n  get404,\n};\n","module.exports = require(\"path\");","module.exports = require(\"fs\");","const { window, StatusBarAlignment } = require('vscode');\nconst Utils = require('./Utils');\n\nlet serverNavBar;\nlet errors = [];\nlet lastText = '';\n\nfunction init({ subscriptions }) {\n  serverNavBar = window.createStatusBarItem(StatusBarAlignment.Left, 100);\n  serverNavBar.command = 'ui5-tools.server.toggle';\n  subscriptions.push(serverNavBar);\n  startText();\n  serverNavBar.show();\n}\n\nfunction startText() {\n  lastText = 'startText';\n  let { serverName } = Utils.loadConfig();\n  serverNavBar.text = `$(debug-start) Start ${serverName}`;\n}\n\nfunction stopText() {\n  lastText = 'stopText';\n  let errorText = getErrors();\n  let { serverName, port } = Utils.loadConfig();\n  serverNavBar.text = `$(broadcast)${errorText} ${serverName} live at port ${port}`;\n}\n\nfunction startingText() {\n  lastText = 'startingText';\n  let { serverName } = Utils.loadConfig();\n  serverNavBar.text = `$(loading) Starting ${serverName}...`;\n}\n\nfunction stoppingText() {\n  lastText = 'stoppingText';\n  errors = [];\n  let { serverName } = Utils.loadConfig();\n  serverNavBar.text = `$(loading) Stopping ${serverName}...`;\n}\n\nfunction pushError(error) {\n  if (error) {\n    errors.push(error);\n    if (this && this[lastText]) {\n      this[lastText]();\n    }\n  }\n}\n\nfunction getErrors() {\n  let errorText = ' ';\n  if (errors.length) {\n    errorText = ' $(alert)'; // + errors.join(', ');\n  }\n  return errorText;\n}\n\nmodule.exports = {\n  init,\n  startText,\n  stopText,\n  startingText,\n  stoppingText,\n  pushError,\n};\n","const { commands } = require('vscode');\nconst { registerCommand } = commands;\nconst Server = require('./Server');\nconst Configurator = require('./Configurator');\nconst Builder = require('./Builder');\nconst StatusBar = require('./StatusBar');\nconst Utils = require('./Utils');\n\nfunction activate(context) {\n  const { subscriptions } = context;\n  StatusBar.init(context);\n  if (Utils.getConfigurationServer('startOnLaunch')) {\n    Server.start();\n  }\n\n  subscriptions.push(registerCommand('ui5-tools.server.start', () => Server.start()));\n  subscriptions.push(registerCommand('ui5-tools.server.stop', () => Server.stop()));\n  subscriptions.push(registerCommand('ui5-tools.server.restart', () => Server.restart()));\n  subscriptions.push(registerCommand('ui5-tools.server.toggle', () => Server.toggle()));\n\n  subscriptions.push(registerCommand('ui5-tools.builder.build', () => Builder.build()));\n\n  subscriptions.push(registerCommand('ui5-tools.configurator.odataProvider', () => Configurator.odataProvider()));\n  subscriptions.push(registerCommand('ui5-tools.configurator.ui5Provider', () => Configurator.ui5Provider()));\n}\nexports.activate = activate;\n\nfunction deactivate() {}\n\nmodule.exports = {\n  activate,\n  deactivate,\n};\n","const express = require('express');\nconst { workspace, window } = require('vscode');\nconst liveReload = require('livereload');\nconst connectLiveReload = require('connect-livereload');\nconst opn = require('opn');\nconst { createProxyMiddleware } = require('http-proxy-middleware');\nconst httpsModule = require('https');\nconst path = require('path');\nconst fs = require('fs');\nconst urljoin = require('url-join');\n\nconst StatusBar = require('./StatusBar');\nconst Utils = require('./Utils');\n\nlet app, server, liveServer;\n\nasync function start(restarting = false) {\n  try {\n    StatusBar.startingText();\n\n    let config = Utils.loadConfig(restarting);\n    let { foldersRootMap, folders, port, watch, baseDir, open, index, protocol } = config;\n\n    app = express();\n\n    app.use('/index.html', express.static(path.join(baseDir, 'index.html')));\n\n    if (watch) {\n      attachLiveReload(app, config);\n    }\n\n    Object.entries(foldersRootMap).forEach(([key, folderRoot]) => {\n      app.use(key, express.static(folderRoot));\n    });\n\n    await getGatewayProxy(app, folders);\n    await getResourcesProxy(app, folders);\n    await getErrorsMiddleware(app);\n\n    if (protocol == 'https') {\n      server = httpsModule\n        .createServer(\n          {\n            key: fs.readFileSync(path.join(__dirname, 'cert', 'server.key')),\n            cert: fs.readFileSync(path.join(__dirname, 'cert', 'server.cert')),\n          },\n          app\n        )\n        .listen(port, () => {\n          listen(open, restarting, folders, index, port, protocol);\n        });\n    } else {\n      server = app.listen(port, () => {\n        listen(open, restarting, folders, index, port, protocol);\n      });\n    }\n  } catch (e) {\n    throw new Error(e);\n  }\n}\n\nfunction listen(open, restarting, folders, index, port, protocol) {\n  StatusBar.stopText();\n  if (open && !restarting) {\n    let route = '';\n    if (folders.length == 1) {\n      route = folders[0];\n    }\n    let url = urljoin(`${protocol}://localhost:${port}`, route, index);\n    opn(url);\n  }\n}\n\nfunction stop() {\n  StatusBar.stoppingText();\n  return new Promise((resolv) => {\n    server.close(() => {\n      app = undefined;\n      server = undefined;\n      StatusBar.startText();\n      resolv();\n    });\n  });\n}\n\nfunction get() {\n  return server;\n}\n\nasync function restart() {\n  await stop();\n  await start(true);\n}\n\nasync function toggle() {\n  if (!server || !server.listening) {\n    await start();\n  } else {\n    await stop();\n  }\n  return;\n}\n\nfunction attachLiveReload(app, { foldersRoot, portLiveReload }) {\n  liveServer = liveReload.createServer({\n    extraExts: 'xml,json,properties',\n    watchDirs: foldersRoot,\n    app: app,\n    port: portLiveReload,\n  });\n  liveServer.watch(foldersRoot);\n\n  app.use(\n    connectLiveReload({\n      ignore: [],\n      port: portLiveReload,\n    })\n  );\n}\n\nasync function getGatewayProxy(app, folders = []) {\n  let proxy, targetUri;\n  let gatewayProxy = Utils.getConfigurationServer('gatewayProxy');\n  // Options: Gateway, None\n  switch (gatewayProxy) {\n    case 'Gateway':\n      targetUri = Utils.getConfigurationServer('gatewayUri');\n      proxy = createProxyMiddleware({\n        pathRewrite: {},\n        target: targetUri,\n        secure: targetUri.indexOf('https') == 0,\n        changeOrigin: true,\n        logLevel: 'debug',\n      });\n      app.use('/sap', proxy);\n      break;\n\n    default:\n      break;\n  }\n  return;\n}\n\nasync function getResourcesProxy(app, folders = []) {\n  let targetUri, pathRewrite, pathRoute, proxy;\n  let resourcesProxy = Utils.getConfigurationServer('resourcesProxy');\n\n  // Options: Gateway, CDN SAPUI5, CDN OpenUI5, None\n  switch (resourcesProxy) {\n    case 'Gateway':\n      targetUri = Utils.getConfigurationServer('gatewayUri');\n      pathRoute = '/sap/bc/ui5_ui5/sap';\n\n      pathRewrite = {\n        '^/': `${pathRoute}/`,\n      };\n\n      proxy = createProxyMiddleware({\n        pathRewrite,\n        target: targetUri,\n        secure: targetUri.indexOf('https') == 0,\n        changeOrigin: true,\n        logLevel: 'debug',\n      });\n\n      app.use('/**/resources/**', proxy);\n      break;\n\n    case 'CDN SAPUI5':\n    case 'CDN OpenUI5':\n      let framework = resourcesProxy.indexOf('SAPUI5') >= 0 ? 'sapui5' : 'openui5';\n      let ui5Version = Utils.getConfigurationGeneral('ui5Version');\n\n      targetUri = `https://${framework}.hana.ondemand.com/${ui5Version}/`;\n      pathRoute = '/';\n\n      pathRewrite = {};\n      folders.forEach((folder) => {\n        pathRewrite[`^/${folder}/`] = pathRoute;\n      });\n\n      proxy = createProxyMiddleware({\n        pathRewrite,\n        target: targetUri,\n        secure: targetUri.indexOf('https') == 0,\n        changeOrigin: true,\n        logLevel: 'debug',\n      });\n\n      app.use('/**/resources/**', proxy);\n\n      httpsModule\n        .get(`${targetUri}resources/sap-ui-core.js`, ({ statusCode }) => {\n          if (statusCode !== 200) {\n            let error = `Error: Unable to get sap-ui-core.js, framework ${framework} does not have ${ui5Version} available at CDN.`;\n            StatusBar.pushError(error);\n            window.showErrorMessage(error);\n          }\n        })\n        .on('error', (e) => {\n          let error = `Error: Unable to get sap-ui-core.js, framework ${framework} does not have ${ui5Version} available at CDN.`;\n          StatusBar.pushError(error);\n          window.showErrorMessage(error);\n        });\n\n    default:\n      break;\n  }\n  return;\n}\n\nasync function getErrorsMiddleware(app) {\n  app.use(function (req, res) {\n    res.status(404).send(Utils.get404());\n  });\n  return;\n}\n\nmodule.exports = {\n  start,\n  stop,\n  restart,\n  toggle,\n  get,\n};\n","module.exports = require(\"express\");","module.exports = require(\"livereload\");","module.exports = require(\"connect-livereload\");","module.exports = require(\"opn\");","module.exports = require(\"http-proxy-middleware\");","module.exports = require(\"https\");","module.exports = require(\"url-join\");","const { window, ConfigurationTarget } = require('vscode');\nconst Utils = require('./Utils');\n\nasync function odataProvider() {\n  let odataProviderValue = Utils.getConfigurationServer('gatewayProxy');\n  let quickPickOdataProvider = await window.showQuickPick(\n    [\n      {\n        description: 'Gateway url',\n        label: 'Gateway',\n        picked: odataProviderValue == 'Gateway',\n      },\n      {\n        description: 'Without odata provider',\n        label: 'None',\n        picked: odataProviderValue == 'None',\n      },\n    ],\n    {\n      placeHolder: 'Select odata provider (proxy all /sap)',\n      canPickMany: false,\n    }\n  );\n\n  await Utils.getConfigurationServer().update(\n    'gatewayProxy',\n    quickPickOdataProvider.label,\n    ConfigurationTarget.Workspace\n  );\n\n  if (quickPickOdataProvider.label == 'Gateway') {\n    let inputBoxOdataUri = await window.showInputBox({\n      placeHolder: 'Enter gateway url',\n      value: Utils.getConfigurationServer('gatewayUri'),\n    });\n    await Utils.getConfigurationServer().update('gatewayUri', inputBoxOdataUri, ConfigurationTarget.Workspace);\n  }\n}\n\nasync function ui5Provider() {\n  let ui5ProviderValue = Utils.getConfigurationServer('resourcesProxy');\n  let quickPickUI5Provider = await window.showQuickPick(\n    [\n      {\n        description: 'Use resources from gateway',\n        label: 'Gateway',\n        picked: ui5ProviderValue == 'Gateway',\n      },\n      {\n        description: 'Use SAPUI5 CDN',\n        label: 'CDN SAPUI5',\n        picked: ui5ProviderValue == 'CDN SAPUI5',\n      },\n      {\n        description: 'Use OpenUI5 CDN',\n        label: 'CDN OpenUI5',\n        picked: ui5ProviderValue == 'CDN OpenUI5',\n      },\n      {\n        description: 'Without resources proxy',\n        label: 'None',\n        picked: ui5ProviderValue == 'None',\n      },\n    ],\n    {\n      placeHolder: 'Select odata provider (proxy all /sap)',\n      canPickMany: false,\n    }\n  );\n\n  await Utils.getConfigurationServer().update(\n    'resourcesProxy',\n    quickPickUI5Provider.label,\n    ConfigurationTarget.Workspace\n  );\n\n  if (quickPickUI5Provider.label == 'Gateway') {\n    let inputBoxGatewayUri = await window.showInputBox({\n      placeHolder: 'Enter gateway url',\n      value: Utils.getConfigurationServer('gatewayUri'),\n    });\n    await Utils.getConfigurationServer().update('gatewayUri', inputBoxGatewayUri, ConfigurationTarget.Workspace);\n  }\n\n  //if (quickPickUI5Provider.label != 'None') {\n  let framework = quickPickUI5Provider.label.indexOf('SAPUI5') >= 0 ? 'SAPUI5' : 'OpenUI5';\n  let inputBoxUI5VersionUri = await window.showInputBox({\n    placeHolder: `Enter ${framework} version`,\n    value: Utils.getConfigurationGeneral('ui5Version'),\n  });\n  await Utils.getConfigurationGeneral().update('ui5Version', inputBoxUI5VersionUri, ConfigurationTarget.Workspace);\n  //}\n}\n\nmodule.exports = {\n  odataProvider,\n  ui5Provider,\n};\n","const { workspace, window, ConfigurationTarget } = require('vscode');\nconst path = require('path');\nconst fs = require('fs');\nconst Utils = require('./Utils');\nconst rimraf = require('rimraf');\nconst preload = require('ui5-preload');\nconst UglifyJS = require('uglify-js');\n\nasync function build(projectPath = undefined) {\n  if (!projectPath) {\n    projectPath = await askProjectToBuild();\n  }\n  if (projectPath) {\n    let { srcFolder, distFolder, ui5Version, debugSources, uglifySources } = Utils.loadConfig();\n    if (!srcFolder || !distFolder || srcFolder == distFolder) {\n      throw 'Invalid srcFolder or distFolder';\n    }\n    let compatVersionArr = ui5Version.split('.');\n    while (compatVersionArr.length > 2) {\n      compatVersionArr.pop();\n    }\n    let compatVersion = compatVersionArr.join('.');\n\n    // clean folder\n    rimraf.sync(path.join(projectPath, distFolder));\n\n    copyRecursiveSync(\n      path.join(projectPath, srcFolder),\n      path.join(projectPath, distFolder),\n      debugSources,\n      uglifySources\n    );\n\n    let component = JSON.parse(fs.readFileSync(path.join(projectPath, srcFolder, 'manifest.json'), 'utf-8'));\n    let namespace = component['sap.app'].id;\n    let library = component['sap.app'].type == 'library';\n\n    let ns = namespace.split('.').join('/');\n    let cwd = path.join(projectPath, srcFolder);\n    let dest = path.join(projectPath, distFolder);\n    // preload\n    preload({\n      resources: {\n        cwd,\n        prefix: ns,\n      },\n      dest,\n      compatVersion: compatVersion,\n      compress: true,\n      verbose: false,\n      components: !library ? ns : false,\n      libraries: library ? ns : false,\n    });\n  }\n}\n\nasync function askProjectToBuild() {\n  let project = undefined;\n  try {\n    let { foldersWithName } = Utils.loadConfig();\n    let qpOptions = [];\n    foldersWithName.forEach((folder) => {\n      qpOptions.push({\n        description: folder.uri.path != folder.name ? path.sep + folder.uri.path.split(path.sep).pop() : '',\n        label: folder.name,\n      });\n    });\n    if (qpOptions.length > 1) {\n      let ui5ProjectToBuild = await window.showQuickPick(qpOptions, {\n        placeHolder: 'Select UI5 project to build',\n        canPickMany: false,\n      });\n      project = foldersWithName.filter((folder) => {\n        return folder.name == ui5ProjectToBuild.label;\n      })[0].uri.path;\n    } else if (qpOptions.length == 1) {\n      project = qpOptions[0].uri.path;\n    }\n  } catch (e) {\n    project = undefined;\n  }\n  return project;\n}\n\nfunction copyRecursiveSync(src, dest, debugSources = true, uglifySources = true) {\n  var existsSrc = fs.existsSync(src);\n  var stats = existsSrc && fs.statSync(src);\n  var isDirectory = existsSrc && stats.isDirectory();\n  if (isDirectory) {\n    fs.mkdirSync(dest);\n    fs.readdirSync(src).forEach(function (childItemName) {\n      copyRecursiveSync(path.join(src, childItemName), path.join(dest, childItemName), debugSources, uglifySources);\n    });\n  } else {\n    switch (path.extname(src)) {\n      case '.js':\n        let copyOriginal = true;\n        if (uglifySources) {\n          let code = fs.readFileSync(src, 'utf8');\n          let minifiedFile = UglifyJS.minify(code);\n          if (!minifiedFile.error) {\n            copyOriginal = false;\n            fs.writeFileSync(dest, minifiedFile.code);\n          }\n        }\n        if (copyOriginal) {\n          fs.copyFileSync(src, dest);\n        }\n\n        if (debugSources) {\n          fs.copyFileSync(src, dest.replace('.js', '-dbg.js'));\n        }\n        break;\n      case '.json':\n        let json = fs.readFileSync(src, 'utf8');\n        let jsonStringified = JSON.stringify(JSON.parse(json));\n        fs.writeFileSync(dest, jsonStringified);\n        break;\n      default:\n        fs.copyFileSync(src, dest);\n        break;\n    }\n  }\n}\n\nmodule.exports = {\n  build,\n};\n","module.exports = require(\"rimraf\");","module.exports = require(\"ui5-preload\");","module.exports = require(\"uglify-js\");"],"sourceRoot":""}